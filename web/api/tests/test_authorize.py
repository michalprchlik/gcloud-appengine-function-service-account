from django.test import TestCase
import json 
import requests_mock
from freezegun import freeze_time
from os import environ

from api.authorize import get_is_authorized, validate_headers, get_kid_from_jwt, get_certificate, get_data_jwt_from_headers


class GetIsAuthorizedCloudDeployment(TestCase):

	@freeze_time("2022-09-03 19:00:00")
	@requests_mock.Mocker()
	def test(self, m):

		environ['GOOGLE_CLOUD_PROJECT'] = 'rododendron-361414'
		environ['SERVICE_ACCOUNT_EMAIL'] = 'service-account@rododendron-361414.iam.gserviceaccount.com'
		data = {
			"e847d9948e8545948fa8157b73e915c567302d4e": "-----BEGIN CERTIFICATE-----\nMIIDJzCCAg+gAwIBAgIJAOiiP+CnwEYwMA0GCSqGSIb3DQEBBQUAMDYxNDAyBgNV\nBAMMK2ZlZGVyYXRlZC1zaWdub24uc3lzdGVtLmdzZXJ2aWNlYWNjb3VudC5jb20w\nHhcNMjIwODI3MTUyMjA5WhcNMjIwOTEzMDMzNzA5WjA2MTQwMgYDVQQDDCtmZWRl\ncmF0ZWQtc2lnbm9uLnN5c3RlbS5nc2VydmljZWFjY291bnQuY29tMIIBIjANBgkq\nhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA21mw5OBuQDYONRNRyek+5Mwe2anpgn+1\nNy/RGKU9eNO6/wWg+emzTpwKt4c7dDXgfyJEJ63L0zD/CS+FSyzksHKoGGySsDVX\n+6nD6n36MGxVCz5Z60wgM5FaSKpf7G3iOJi0IiutLcoYv5jl72g6k6nqrRTe5BSm\n7JfNedjpRzOeBm3IPQChW9OSW/fufV8q7Ty09ZbS0fU6KRnsMyCi80EYYg0ondJD\nd56iVUKR4f/OivS+EAZSUzjcu4uWYDzc9lOw8sCbb9oJE4HWLE1bgbQ05jxIqzD+\n6oztB1Mi+0fT5A8BV26MXnSLVPiTCgbSmQSiTq+I//uqxAfsg2v6OQIDAQABozgw\nNjAMBgNVHRMBAf8EAjAAMA4GA1UdDwEB/wQEAwIHgDAWBgNVHSUBAf8EDDAKBggr\nBgEFBQcDAjANBgkqhkiG9w0BAQUFAAOCAQEAg5PdBsjaj2+wcY5gKEFk8taZhXei\nR+hz1V+CWHMoj2U2uH824qr+DqtGrLviuTaY4zh6slaMc/H76swOwUhUIu0zG7n1\nFUl7A82zvX1LJYLRhzPQiegV8NusBJGDo6s10Pc238aX7/d5yovjzV9cAH3VUY2U\nWqBiy8c+0m7W3h+6eKkKLzoqnN3qGZxS9ahyNxJs6s30Ps3O7agWtFoV+9F9/fx+\nK6yoRcSu+gk1NxdlBs+OljuSQW07eW7gpDt7KnfmmAxqNZwqgwTJM7Mv80gbvAaP\ngQIWsCIrFhfAG8JD82gbqjoS+sGkfsSYDlaXule/bz+SPOnm2baB8CfMkA==\n-----END CERTIFICATE-----\n",
			"402f305b70581329ff289b5b3a67283806eca893": "-----BEGIN CERTIFICATE-----\nMIIDJzCCAg+gAwIBAgIJAP8DnpyTyzWzMA0GCSqGSIb3DQEBBQUAMDYxNDAyBgNV\nBAMMK2ZlZGVyYXRlZC1zaWdub24uc3lzdGVtLmdzZXJ2aWNlYWNjb3VudC5jb20w\nHhcNMjIwODE5MTUyMjA4WhcNMjIwOTA1MDMzNzA4WjA2MTQwMgYDVQQDDCtmZWRl\ncmF0ZWQtc2lnbm9uLnN5c3RlbS5nc2VydmljZWFjY291bnQuY29tMIIBIjANBgkq\nhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAjN4xvvGtTeXxq5DZxQxBdafPZAfXn6uo\nwE1VsVXRaSo28GAizL0OdErMui028K3pLN1XkThebJruh7SSadG3H7WJfpxf4wyC\ngj1ofbRIhbjjKcPqO86Lo/Uekzsv5MeW4Q2ZOvZiJkLnp3zFnFKaeBV0P408k2Hb\nGnHS6LEcDqDWA7G+TmE+TZIoB6HZ0Q7dN3oFYJ831NZj3IyNRC9lzNaG+S00AEvK\nNO+3J59qig09Z/M9yuHlU1WI+BNO8wyx+5kZFe/px6m7QQ95y9v9EZWeIKMCQkom\nkXYhLOa7GQT9ITh5uINeRqh4rIzY1z5uAHDkgIqHn1Ztpw1O47jOewIDAQABozgw\nNjAMBgNVHRMBAf8EAjAAMA4GA1UdDwEB/wQEAwIHgDAWBgNVHSUBAf8EDDAKBggr\nBgEFBQcDAjANBgkqhkiG9w0BAQUFAAOCAQEAVMtPJ/ROml4hMswWw/y2/Dwz866Z\nGuSEQnL3MY7t7xjoFtQfqf7lKFYHNQU6lLlCdqUPiSGgBpyf1IqlwOQirToVTcda\nzzrORmDMCjzes8ZBkIpCgfpMIy/HjWvGUid98CpLp0pj5mrrMc9rpl4fj9UAU9rD\niiEgORtLuGIcKYxRGZUjvfnJqnpNDViFfXOnERI97E1Eapa6KwDAu+S4WnLfjXLJ\nnyX99EMPbBm/LcS5FxHreUarbkEMaejO6HIQ6ujq80FICV8WURKlGJ/g3L4lOd1s\nnHiJllZcma99IEJyKA9+NqfVKlCs/sQX2IdC1SXPHVTPPrqPZR1OS9Bz9w==\n-----END CERTIFICATE-----\n"
		}
		json_data = json.dumps(data)
		content = str.encode(json_data)
		url = "https://www.googleapis.com/oauth2/v1/certs"
		m.get(url, content=content)

		headers = {
			'HTTP_AUTHORIZATION':'Bearer eyJhbGciOiJSUzI1NiIsImtpZCI6ImU4NDdkOTk0OGU4NTQ1OTQ4ZmE4MTU3YjczZTkxNWM1NjczMDJkNGUiLCJ0eXAiOiJKV1QifQ.eyJhdWQiOiJodHRwczovL3JvZG9kZW5kcm9uLTM2MTQxNC5vYS5yLmFwcHNwb3QuY29tL2FwaS8iLCJhenAiOiIxMDYxMjczNzYxMjgzMTgxNDQ0MTEiLCJlbWFpbCI6InNlcnZpY2UtYWNjb3VudEByb2RvZGVuZHJvbi0zNjE0MTQuaWFtLmdzZXJ2aWNlYWNjb3VudC5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwiZXhwIjoxNjYyMjMxNjA4LCJpYXQiOjE2NjIyMjgwMDgsImlzcyI6Imh0dHBzOi8vYWNjb3VudHMuZ29vZ2xlLmNvbSIsInN1YiI6IjEwNjEyNzM3NjEyODMxODE0NDQxMSJ9.DEIHNCtlCVXK20DQWbF4eatYcEjVv1l3Rf-fT-Uut8_bUUgcep9WKxJShpclwpI_tm5Q7cF2ouzfDQb7jZ-xpTCCBuXWCRmimuwWDZ9jOzYE68AjqhRPrEB4TLAyAWsBuQX96ql3sPf6GKPT8k94ic1s1x8wOgHE7ENcVd3eogc15qQQgfGqdqL9h8g7FYRpUBsQvWn3AaTsHdkzGOCGz9T-RZtpET05QkcSwduHm4k7LewUi8qhCicpsi6axBJ7KqYXOBRm2hKtmNlDosouf-qz2Wo6lbyfCJ4cLtsVQSlasgPPswVPDaFUqiOpznQg5Olwt5do-xY9jgYC5-egFA',
		}

		result = get_is_authorized(headers)
		expected_result = True

		self.assertEqual(result, expected_result)

		environ['GOOGLE_CLOUD_PROJECT'] = ""
		environ['SERVICE_ACCOUNT_EMAIL'] = ""


class GetIsAuthorizedLocalDeployment(TestCase):

	def test(self):

		headers = {}

		result = get_is_authorized(headers)
		expected_result = True

		self.assertEqual(result, expected_result)


class GetDataJwtFromHeaders1(TestCase):

	def test(self):

		headers = {
			'HTTP_AUTHORIZATION':'Bearer eyJhbGciOiJSUzI1NiIsImtpZCI6ImU4NDdkOTk0OGU4NTQ1OTQ4ZmE4MTU3YjczZTkxNWM1NjczMDJkNGUiLCJ0eXAiOiJKV1QifQ.eyJhdWQiOiJodHRwczovL3JvZG9kZW5kcm9uLTM2MTQxNC5vYS5yLmFwcHNwb3QuY29tL2FwaS8iLCJhenAiOiIxMDYxMjczNzYxMjgzMTgxNDQ0MTEiLCJlbWFpbCI6InNlcnZpY2UtYWNjb3VudEByb2RvZGVuZHJvbi0zNjE0MTQuaWFtLmdzZXJ2aWNlYWNjb3VudC5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwiZXhwIjoxNjYyMjMxNjA4LCJpYXQiOjE2NjIyMjgwMDgsImlzcyI6Imh0dHBzOi8vYWNjb3VudHMuZ29vZ2xlLmNvbSIsInN1YiI6IjEwNjEyNzM3NjEyODMxODE0NDQxMSJ9.DEIHNCtlCVXK20DQWbF4eatYcEjVv1l3Rf-fT-Uut8_bUUgcep9WKxJShpclwpI_tm5Q7cF2ouzfDQb7jZ-xpTCCBuXWCRmimuwWDZ9jOzYE68AjqhRPrEB4TLAyAWsBuQX96ql3sPf6GKPT8k94ic1s1x8wOgHE7ENcVd3eogc15qQQgfGqdqL9h8g7FYRpUBsQvWn3AaTsHdkzGOCGz9T-RZtpET05QkcSwduHm4k7LewUi8qhCicpsi6axBJ7KqYXOBRm2hKtmNlDosouf-qz2Wo6lbyfCJ4cLtsVQSlasgPPswVPDaFUqiOpznQg5Olwt5do-xY9jgYC5-egFA',
		}

		result = get_data_jwt_from_headers(headers)
		expected_result = "eyJhbGciOiJSUzI1NiIsImtpZCI6ImU4NDdkOTk0OGU4NTQ1OTQ4ZmE4MTU3YjczZTkxNWM1NjczMDJkNGUiLCJ0eXAiOiJKV1QifQ.eyJhdWQiOiJodHRwczovL3JvZG9kZW5kcm9uLTM2MTQxNC5vYS5yLmFwcHNwb3QuY29tL2FwaS8iLCJhenAiOiIxMDYxMjczNzYxMjgzMTgxNDQ0MTEiLCJlbWFpbCI6InNlcnZpY2UtYWNjb3VudEByb2RvZGVuZHJvbi0zNjE0MTQuaWFtLmdzZXJ2aWNlYWNjb3VudC5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwiZXhwIjoxNjYyMjMxNjA4LCJpYXQiOjE2NjIyMjgwMDgsImlzcyI6Imh0dHBzOi8vYWNjb3VudHMuZ29vZ2xlLmNvbSIsInN1YiI6IjEwNjEyNzM3NjEyODMxODE0NDQxMSJ9.DEIHNCtlCVXK20DQWbF4eatYcEjVv1l3Rf-fT-Uut8_bUUgcep9WKxJShpclwpI_tm5Q7cF2ouzfDQb7jZ-xpTCCBuXWCRmimuwWDZ9jOzYE68AjqhRPrEB4TLAyAWsBuQX96ql3sPf6GKPT8k94ic1s1x8wOgHE7ENcVd3eogc15qQQgfGqdqL9h8g7FYRpUBsQvWn3AaTsHdkzGOCGz9T-RZtpET05QkcSwduHm4k7LewUi8qhCicpsi6axBJ7KqYXOBRm2hKtmNlDosouf-qz2Wo6lbyfCJ4cLtsVQSlasgPPswVPDaFUqiOpznQg5Olwt5do-xY9jgYC5-egFA"

		self.assertEqual(result, expected_result)


class GetDataJwtFromHeaders2(TestCase):

	def test(self):

		headers = {
			'HTTP_AUTHORIZATION':'INCORRECT eyJhbGciOiJSUzI1NiIsImtpZCI6ImU4NDdkOTk0OGU4NTQ1OTQ4ZmE4MTU3YjczZTkxNWM1NjczMDJkNGUiLCJ0eXAiOiJKV1QifQ.eyJhdWQiOiJodHRwczovL3JvZG9kZW5kcm9uLTM2MTQxNC5vYS5yLmFwcHNwb3QuY29tL2FwaS8iLCJhenAiOiIxMDYxMjczNzYxMjgzMTgxNDQ0MTEiLCJlbWFpbCI6InNlcnZpY2UtYWNjb3VudEByb2RvZGVuZHJvbi0zNjE0MTQuaWFtLmdzZXJ2aWNlYWNjb3VudC5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwiZXhwIjoxNjYyMjMxNjA4LCJpYXQiOjE2NjIyMjgwMDgsImlzcyI6Imh0dHBzOi8vYWNjb3VudHMuZ29vZ2xlLmNvbSIsInN1YiI6IjEwNjEyNzM3NjEyODMxODE0NDQxMSJ9.DEIHNCtlCVXK20DQWbF4eatYcEjVv1l3Rf-fT-Uut8_bUUgcep9WKxJShpclwpI_tm5Q7cF2ouzfDQb7jZ-xpTCCBuXWCRmimuwWDZ9jOzYE68AjqhRPrEB4TLAyAWsBuQX96ql3sPf6GKPT8k94ic1s1x8wOgHE7ENcVd3eogc15qQQgfGqdqL9h8g7FYRpUBsQvWn3AaTsHdkzGOCGz9T-RZtpET05QkcSwduHm4k7LewUi8qhCicpsi6axBJ7KqYXOBRm2hKtmNlDosouf-qz2Wo6lbyfCJ4cLtsVQSlasgPPswVPDaFUqiOpznQg5Olwt5do-xY9jgYC5-egFA',
		}

		result = get_data_jwt_from_headers(headers)
		expected_result = None

		self.assertEqual(result, expected_result)


class GetDataJwtFromHeaders3(TestCase):

	def test(self):

		headers = {
			'INCORRECT':'INCORRECT INCORRECT',
		}

		result = get_data_jwt_from_headers(headers)
		expected_result = None

		self.assertEqual(result, expected_result)


class ValidateJwt1(TestCase):

	@freeze_time("2022-09-03 19:00:00")
	@requests_mock.Mocker()
	def test(self, m):

		environ['SERVICE_ACCOUNT_EMAIL'] = 'service-account@rododendron-361414.iam.gserviceaccount.com'
		data = {
			"e847d9948e8545948fa8157b73e915c567302d4e": "-----BEGIN CERTIFICATE-----\nMIIDJzCCAg+gAwIBAgIJAOiiP+CnwEYwMA0GCSqGSIb3DQEBBQUAMDYxNDAyBgNV\nBAMMK2ZlZGVyYXRlZC1zaWdub24uc3lzdGVtLmdzZXJ2aWNlYWNjb3VudC5jb20w\nHhcNMjIwODI3MTUyMjA5WhcNMjIwOTEzMDMzNzA5WjA2MTQwMgYDVQQDDCtmZWRl\ncmF0ZWQtc2lnbm9uLnN5c3RlbS5nc2VydmljZWFjY291bnQuY29tMIIBIjANBgkq\nhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA21mw5OBuQDYONRNRyek+5Mwe2anpgn+1\nNy/RGKU9eNO6/wWg+emzTpwKt4c7dDXgfyJEJ63L0zD/CS+FSyzksHKoGGySsDVX\n+6nD6n36MGxVCz5Z60wgM5FaSKpf7G3iOJi0IiutLcoYv5jl72g6k6nqrRTe5BSm\n7JfNedjpRzOeBm3IPQChW9OSW/fufV8q7Ty09ZbS0fU6KRnsMyCi80EYYg0ondJD\nd56iVUKR4f/OivS+EAZSUzjcu4uWYDzc9lOw8sCbb9oJE4HWLE1bgbQ05jxIqzD+\n6oztB1Mi+0fT5A8BV26MXnSLVPiTCgbSmQSiTq+I//uqxAfsg2v6OQIDAQABozgw\nNjAMBgNVHRMBAf8EAjAAMA4GA1UdDwEB/wQEAwIHgDAWBgNVHSUBAf8EDDAKBggr\nBgEFBQcDAjANBgkqhkiG9w0BAQUFAAOCAQEAg5PdBsjaj2+wcY5gKEFk8taZhXei\nR+hz1V+CWHMoj2U2uH824qr+DqtGrLviuTaY4zh6slaMc/H76swOwUhUIu0zG7n1\nFUl7A82zvX1LJYLRhzPQiegV8NusBJGDo6s10Pc238aX7/d5yovjzV9cAH3VUY2U\nWqBiy8c+0m7W3h+6eKkKLzoqnN3qGZxS9ahyNxJs6s30Ps3O7agWtFoV+9F9/fx+\nK6yoRcSu+gk1NxdlBs+OljuSQW07eW7gpDt7KnfmmAxqNZwqgwTJM7Mv80gbvAaP\ngQIWsCIrFhfAG8JD82gbqjoS+sGkfsSYDlaXule/bz+SPOnm2baB8CfMkA==\n-----END CERTIFICATE-----\n",
			"402f305b70581329ff289b5b3a67283806eca893": "-----BEGIN CERTIFICATE-----\nMIIDJzCCAg+gAwIBAgIJAP8DnpyTyzWzMA0GCSqGSIb3DQEBBQUAMDYxNDAyBgNV\nBAMMK2ZlZGVyYXRlZC1zaWdub24uc3lzdGVtLmdzZXJ2aWNlYWNjb3VudC5jb20w\nHhcNMjIwODE5MTUyMjA4WhcNMjIwOTA1MDMzNzA4WjA2MTQwMgYDVQQDDCtmZWRl\ncmF0ZWQtc2lnbm9uLnN5c3RlbS5nc2VydmljZWFjY291bnQuY29tMIIBIjANBgkq\nhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAjN4xvvGtTeXxq5DZxQxBdafPZAfXn6uo\nwE1VsVXRaSo28GAizL0OdErMui028K3pLN1XkThebJruh7SSadG3H7WJfpxf4wyC\ngj1ofbRIhbjjKcPqO86Lo/Uekzsv5MeW4Q2ZOvZiJkLnp3zFnFKaeBV0P408k2Hb\nGnHS6LEcDqDWA7G+TmE+TZIoB6HZ0Q7dN3oFYJ831NZj3IyNRC9lzNaG+S00AEvK\nNO+3J59qig09Z/M9yuHlU1WI+BNO8wyx+5kZFe/px6m7QQ95y9v9EZWeIKMCQkom\nkXYhLOa7GQT9ITh5uINeRqh4rIzY1z5uAHDkgIqHn1Ztpw1O47jOewIDAQABozgw\nNjAMBgNVHRMBAf8EAjAAMA4GA1UdDwEB/wQEAwIHgDAWBgNVHSUBAf8EDDAKBggr\nBgEFBQcDAjANBgkqhkiG9w0BAQUFAAOCAQEAVMtPJ/ROml4hMswWw/y2/Dwz866Z\nGuSEQnL3MY7t7xjoFtQfqf7lKFYHNQU6lLlCdqUPiSGgBpyf1IqlwOQirToVTcda\nzzrORmDMCjzes8ZBkIpCgfpMIy/HjWvGUid98CpLp0pj5mrrMc9rpl4fj9UAU9rD\niiEgORtLuGIcKYxRGZUjvfnJqnpNDViFfXOnERI97E1Eapa6KwDAu+S4WnLfjXLJ\nnyX99EMPbBm/LcS5FxHreUarbkEMaejO6HIQ6ujq80FICV8WURKlGJ/g3L4lOd1s\nnHiJllZcma99IEJyKA9+NqfVKlCs/sQX2IdC1SXPHVTPPrqPZR1OS9Bz9w==\n-----END CERTIFICATE-----\n"
		}
		json_data = json.dumps(data)
		content = str.encode(json_data)
		url = "https://www.googleapis.com/oauth2/v1/certs"
		m.get(url, content=content)

		headers = {
			'HTTP_AUTHORIZATION':'Bearer eyJhbGciOiJSUzI1NiIsImtpZCI6ImU4NDdkOTk0OGU4NTQ1OTQ4ZmE4MTU3YjczZTkxNWM1NjczMDJkNGUiLCJ0eXAiOiJKV1QifQ.eyJhdWQiOiJodHRwczovL3JvZG9kZW5kcm9uLTM2MTQxNC5vYS5yLmFwcHNwb3QuY29tL2FwaS8iLCJhenAiOiIxMDYxMjczNzYxMjgzMTgxNDQ0MTEiLCJlbWFpbCI6InNlcnZpY2UtYWNjb3VudEByb2RvZGVuZHJvbi0zNjE0MTQuaWFtLmdzZXJ2aWNlYWNjb3VudC5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwiZXhwIjoxNjYyMjMxNjA4LCJpYXQiOjE2NjIyMjgwMDgsImlzcyI6Imh0dHBzOi8vYWNjb3VudHMuZ29vZ2xlLmNvbSIsInN1YiI6IjEwNjEyNzM3NjEyODMxODE0NDQxMSJ9.DEIHNCtlCVXK20DQWbF4eatYcEjVv1l3Rf-fT-Uut8_bUUgcep9WKxJShpclwpI_tm5Q7cF2ouzfDQb7jZ-xpTCCBuXWCRmimuwWDZ9jOzYE68AjqhRPrEB4TLAyAWsBuQX96ql3sPf6GKPT8k94ic1s1x8wOgHE7ENcVd3eogc15qQQgfGqdqL9h8g7FYRpUBsQvWn3AaTsHdkzGOCGz9T-RZtpET05QkcSwduHm4k7LewUi8qhCicpsi6axBJ7KqYXOBRm2hKtmNlDosouf-qz2Wo6lbyfCJ4cLtsVQSlasgPPswVPDaFUqiOpznQg5Olwt5do-xY9jgYC5-egFA',
		}

		result = validate_headers(headers)
		expected_result = True

		self.assertEqual(result, expected_result)

		environ['SERVICE_ACCOUNT_EMAIL'] = ""


class ValidateJwtExpiredToken(TestCase):

	@freeze_time("2022-09-30 19:00:00")
	@requests_mock.Mocker()
	def test(self, m):

		environ['SERVICE_ACCOUNT_EMAIL'] = 'service-account@rododendron-361414.iam.gserviceaccount.com'
		data = {
			"e847d9948e8545948fa8157b73e915c567302d4e": "-----BEGIN CERTIFICATE-----\nMIIDJzCCAg+gAwIBAgIJAOiiP+CnwEYwMA0GCSqGSIb3DQEBBQUAMDYxNDAyBgNV\nBAMMK2ZlZGVyYXRlZC1zaWdub24uc3lzdGVtLmdzZXJ2aWNlYWNjb3VudC5jb20w\nHhcNMjIwODI3MTUyMjA5WhcNMjIwOTEzMDMzNzA5WjA2MTQwMgYDVQQDDCtmZWRl\ncmF0ZWQtc2lnbm9uLnN5c3RlbS5nc2VydmljZWFjY291bnQuY29tMIIBIjANBgkq\nhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA21mw5OBuQDYONRNRyek+5Mwe2anpgn+1\nNy/RGKU9eNO6/wWg+emzTpwKt4c7dDXgfyJEJ63L0zD/CS+FSyzksHKoGGySsDVX\n+6nD6n36MGxVCz5Z60wgM5FaSKpf7G3iOJi0IiutLcoYv5jl72g6k6nqrRTe5BSm\n7JfNedjpRzOeBm3IPQChW9OSW/fufV8q7Ty09ZbS0fU6KRnsMyCi80EYYg0ondJD\nd56iVUKR4f/OivS+EAZSUzjcu4uWYDzc9lOw8sCbb9oJE4HWLE1bgbQ05jxIqzD+\n6oztB1Mi+0fT5A8BV26MXnSLVPiTCgbSmQSiTq+I//uqxAfsg2v6OQIDAQABozgw\nNjAMBgNVHRMBAf8EAjAAMA4GA1UdDwEB/wQEAwIHgDAWBgNVHSUBAf8EDDAKBggr\nBgEFBQcDAjANBgkqhkiG9w0BAQUFAAOCAQEAg5PdBsjaj2+wcY5gKEFk8taZhXei\nR+hz1V+CWHMoj2U2uH824qr+DqtGrLviuTaY4zh6slaMc/H76swOwUhUIu0zG7n1\nFUl7A82zvX1LJYLRhzPQiegV8NusBJGDo6s10Pc238aX7/d5yovjzV9cAH3VUY2U\nWqBiy8c+0m7W3h+6eKkKLzoqnN3qGZxS9ahyNxJs6s30Ps3O7agWtFoV+9F9/fx+\nK6yoRcSu+gk1NxdlBs+OljuSQW07eW7gpDt7KnfmmAxqNZwqgwTJM7Mv80gbvAaP\ngQIWsCIrFhfAG8JD82gbqjoS+sGkfsSYDlaXule/bz+SPOnm2baB8CfMkA==\n-----END CERTIFICATE-----\n",
			"402f305b70581329ff289b5b3a67283806eca893": "-----BEGIN CERTIFICATE-----\nMIIDJzCCAg+gAwIBAgIJAP8DnpyTyzWzMA0GCSqGSIb3DQEBBQUAMDYxNDAyBgNV\nBAMMK2ZlZGVyYXRlZC1zaWdub24uc3lzdGVtLmdzZXJ2aWNlYWNjb3VudC5jb20w\nHhcNMjIwODE5MTUyMjA4WhcNMjIwOTA1MDMzNzA4WjA2MTQwMgYDVQQDDCtmZWRl\ncmF0ZWQtc2lnbm9uLnN5c3RlbS5nc2VydmljZWFjY291bnQuY29tMIIBIjANBgkq\nhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAjN4xvvGtTeXxq5DZxQxBdafPZAfXn6uo\nwE1VsVXRaSo28GAizL0OdErMui028K3pLN1XkThebJruh7SSadG3H7WJfpxf4wyC\ngj1ofbRIhbjjKcPqO86Lo/Uekzsv5MeW4Q2ZOvZiJkLnp3zFnFKaeBV0P408k2Hb\nGnHS6LEcDqDWA7G+TmE+TZIoB6HZ0Q7dN3oFYJ831NZj3IyNRC9lzNaG+S00AEvK\nNO+3J59qig09Z/M9yuHlU1WI+BNO8wyx+5kZFe/px6m7QQ95y9v9EZWeIKMCQkom\nkXYhLOa7GQT9ITh5uINeRqh4rIzY1z5uAHDkgIqHn1Ztpw1O47jOewIDAQABozgw\nNjAMBgNVHRMBAf8EAjAAMA4GA1UdDwEB/wQEAwIHgDAWBgNVHSUBAf8EDDAKBggr\nBgEFBQcDAjANBgkqhkiG9w0BAQUFAAOCAQEAVMtPJ/ROml4hMswWw/y2/Dwz866Z\nGuSEQnL3MY7t7xjoFtQfqf7lKFYHNQU6lLlCdqUPiSGgBpyf1IqlwOQirToVTcda\nzzrORmDMCjzes8ZBkIpCgfpMIy/HjWvGUid98CpLp0pj5mrrMc9rpl4fj9UAU9rD\niiEgORtLuGIcKYxRGZUjvfnJqnpNDViFfXOnERI97E1Eapa6KwDAu+S4WnLfjXLJ\nnyX99EMPbBm/LcS5FxHreUarbkEMaejO6HIQ6ujq80FICV8WURKlGJ/g3L4lOd1s\nnHiJllZcma99IEJyKA9+NqfVKlCs/sQX2IdC1SXPHVTPPrqPZR1OS9Bz9w==\n-----END CERTIFICATE-----\n"
		}
		json_data = json.dumps(data)
		content = str.encode(json_data)
		url = "https://www.googleapis.com/oauth2/v1/certs"
		m.get(url, content=content)

		headers = {
			'HTTP_AUTHORIZATION':'Bearer eyJhbGciOiJSUzI1NiIsImtpZCI6ImU4NDdkOTk0OGU4NTQ1OTQ4ZmE4MTU3YjczZTkxNWM1NjczMDJkNGUiLCJ0eXAiOiJKV1QifQ.eyJhdWQiOiJodHRwczovL3JvZG9kZW5kcm9uLTM2MTQxNC5vYS5yLmFwcHNwb3QuY29tL2FwaS8iLCJhenAiOiIxMDYxMjczNzYxMjgzMTgxNDQ0MTEiLCJlbWFpbCI6InNlcnZpY2UtYWNjb3VudEByb2RvZGVuZHJvbi0zNjE0MTQuaWFtLmdzZXJ2aWNlYWNjb3VudC5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwiZXhwIjoxNjYyMjMxNjA4LCJpYXQiOjE2NjIyMjgwMDgsImlzcyI6Imh0dHBzOi8vYWNjb3VudHMuZ29vZ2xlLmNvbSIsInN1YiI6IjEwNjEyNzM3NjEyODMxODE0NDQxMSJ9.DEIHNCtlCVXK20DQWbF4eatYcEjVv1l3Rf-fT-Uut8_bUUgcep9WKxJShpclwpI_tm5Q7cF2ouzfDQb7jZ-xpTCCBuXWCRmimuwWDZ9jOzYE68AjqhRPrEB4TLAyAWsBuQX96ql3sPf6GKPT8k94ic1s1x8wOgHE7ENcVd3eogc15qQQgfGqdqL9h8g7FYRpUBsQvWn3AaTsHdkzGOCGz9T-RZtpET05QkcSwduHm4k7LewUi8qhCicpsi6axBJ7KqYXOBRm2hKtmNlDosouf-qz2Wo6lbyfCJ4cLtsVQSlasgPPswVPDaFUqiOpznQg5Olwt5do-xY9jgYC5-egFA',
		}

		result = validate_headers(headers)
		expected_result = False

		self.assertEqual(result, expected_result)

		environ['SERVICE_ACCOUNT_EMAIL'] = ""


class ValidateJwtHeadersEmpty(TestCase):

	def test(self):

		headers = {}

		result = validate_headers(headers)
		expected_result = False

		self.assertEqual(result, expected_result)


class GetKidFromJwt(TestCase):

	def test(self):

		data_jwt = "eyJhbGciOiJSUzI1NiIsImtpZCI6ImU4NDdkOTk0OGU4NTQ1OTQ4ZmE4MTU3YjczZTkxNWM1NjczMDJkNGUiLCJ0eXAiOiJKV1QifQ.eyJhdWQiOiJodHRwczovL3JvZG9kZW5kcm9uLTM2MTQxNC5vYS5yLmFwcHNwb3QuY29tL2FwaS8iLCJhenAiOiIxMDYxMjczNzYxMjgzMTgxNDQ0MTEiLCJlbWFpbCI6InNlcnZpY2UtYWNjb3VudEByb2RvZGVuZHJvbi0zNjE0MTQuaWFtLmdzZXJ2aWNlYWNjb3VudC5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwiZXhwIjoxNjYyMjI5NjgxLCJpYXQiOjE2NjIyMjYwODEsImlzcyI6Imh0dHBzOi8vYWNjb3VudHMuZ29vZ2xlLmNvbSIsInN1YiI6IjEwNjEyNzM3NjEyODMxODE0NDQxMSJ9.vbOeL0iC7pEqb_55t2WbhnlFql2ocgMLsAqNmsg2NEPQE781PQumhB0RJIPxsIO0L-v0J6XWlFGL06yuxRaRHpBPeeejfAT2wxm04K8htg6_cWZd02cRXqmrWSuBjFixm-f47IK73wf6NX4FV6_nilQoZh2WG7FN3piM9YbhlDair4wOVmPAO0Qno4oyKKTjLZWfom2NP_2go20NyTObdRATqZ3G5PsZB294f821ru-96QVNZriwojXoHfFlHkLTQUoFYGLQaKgo6uhfbq3obBphx3KAvUNtWuyrwLj4jbYvDFJHalzclMhGyaSYomBhZEavDnq0rx4CWRyG8syMvQ"

		result = get_kid_from_jwt(data_jwt)
		expected_result = "e847d9948e8545948fa8157b73e915c567302d4e"

		self.assertEqual(result, expected_result)


class GetCertificate1(TestCase):

	@requests_mock.Mocker()
	def test(self, m):

		data = {
			"e847d9948e8545948fa8157b73e915c567302d4e": "-----BEGIN CERTIFICATE-----\nMIIDJzCCAg+gAwIBAgIJAOiiP+CnwEYwMA0GCSqGSIb3DQEBBQUAMDYxNDAyBgNV\nBAMMK2ZlZGVyYXRlZC1zaWdub24uc3lzdGVtLmdzZXJ2aWNlYWNjb3VudC5jb20w\nHhcNMjIwODI3MTUyMjA5WhcNMjIwOTEzMDMzNzA5WjA2MTQwMgYDVQQDDCtmZWRl\ncmF0ZWQtc2lnbm9uLnN5c3RlbS5nc2VydmljZWFjY291bnQuY29tMIIBIjANBgkq\nhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA21mw5OBuQDYONRNRyek+5Mwe2anpgn+1\nNy/RGKU9eNO6/wWg+emzTpwKt4c7dDXgfyJEJ63L0zD/CS+FSyzksHKoGGySsDVX\n+6nD6n36MGxVCz5Z60wgM5FaSKpf7G3iOJi0IiutLcoYv5jl72g6k6nqrRTe5BSm\n7JfNedjpRzOeBm3IPQChW9OSW/fufV8q7Ty09ZbS0fU6KRnsMyCi80EYYg0ondJD\nd56iVUKR4f/OivS+EAZSUzjcu4uWYDzc9lOw8sCbb9oJE4HWLE1bgbQ05jxIqzD+\n6oztB1Mi+0fT5A8BV26MXnSLVPiTCgbSmQSiTq+I//uqxAfsg2v6OQIDAQABozgw\nNjAMBgNVHRMBAf8EAjAAMA4GA1UdDwEB/wQEAwIHgDAWBgNVHSUBAf8EDDAKBggr\nBgEFBQcDAjANBgkqhkiG9w0BAQUFAAOCAQEAg5PdBsjaj2+wcY5gKEFk8taZhXei\nR+hz1V+CWHMoj2U2uH824qr+DqtGrLviuTaY4zh6slaMc/H76swOwUhUIu0zG7n1\nFUl7A82zvX1LJYLRhzPQiegV8NusBJGDo6s10Pc238aX7/d5yovjzV9cAH3VUY2U\nWqBiy8c+0m7W3h+6eKkKLzoqnN3qGZxS9ahyNxJs6s30Ps3O7agWtFoV+9F9/fx+\nK6yoRcSu+gk1NxdlBs+OljuSQW07eW7gpDt7KnfmmAxqNZwqgwTJM7Mv80gbvAaP\ngQIWsCIrFhfAG8JD82gbqjoS+sGkfsSYDlaXule/bz+SPOnm2baB8CfMkA==\n-----END CERTIFICATE-----\n",
			"402f305b70581329ff289b5b3a67283806eca893": "-----BEGIN CERTIFICATE-----\nMIIDJzCCAg+gAwIBAgIJAP8DnpyTyzWzMA0GCSqGSIb3DQEBBQUAMDYxNDAyBgNV\nBAMMK2ZlZGVyYXRlZC1zaWdub24uc3lzdGVtLmdzZXJ2aWNlYWNjb3VudC5jb20w\nHhcNMjIwODE5MTUyMjA4WhcNMjIwOTA1MDMzNzA4WjA2MTQwMgYDVQQDDCtmZWRl\ncmF0ZWQtc2lnbm9uLnN5c3RlbS5nc2VydmljZWFjY291bnQuY29tMIIBIjANBgkq\nhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAjN4xvvGtTeXxq5DZxQxBdafPZAfXn6uo\nwE1VsVXRaSo28GAizL0OdErMui028K3pLN1XkThebJruh7SSadG3H7WJfpxf4wyC\ngj1ofbRIhbjjKcPqO86Lo/Uekzsv5MeW4Q2ZOvZiJkLnp3zFnFKaeBV0P408k2Hb\nGnHS6LEcDqDWA7G+TmE+TZIoB6HZ0Q7dN3oFYJ831NZj3IyNRC9lzNaG+S00AEvK\nNO+3J59qig09Z/M9yuHlU1WI+BNO8wyx+5kZFe/px6m7QQ95y9v9EZWeIKMCQkom\nkXYhLOa7GQT9ITh5uINeRqh4rIzY1z5uAHDkgIqHn1Ztpw1O47jOewIDAQABozgw\nNjAMBgNVHRMBAf8EAjAAMA4GA1UdDwEB/wQEAwIHgDAWBgNVHSUBAf8EDDAKBggr\nBgEFBQcDAjANBgkqhkiG9w0BAQUFAAOCAQEAVMtPJ/ROml4hMswWw/y2/Dwz866Z\nGuSEQnL3MY7t7xjoFtQfqf7lKFYHNQU6lLlCdqUPiSGgBpyf1IqlwOQirToVTcda\nzzrORmDMCjzes8ZBkIpCgfpMIy/HjWvGUid98CpLp0pj5mrrMc9rpl4fj9UAU9rD\niiEgORtLuGIcKYxRGZUjvfnJqnpNDViFfXOnERI97E1Eapa6KwDAu+S4WnLfjXLJ\nnyX99EMPbBm/LcS5FxHreUarbkEMaejO6HIQ6ujq80FICV8WURKlGJ/g3L4lOd1s\nnHiJllZcma99IEJyKA9+NqfVKlCs/sQX2IdC1SXPHVTPPrqPZR1OS9Bz9w==\n-----END CERTIFICATE-----\n"
		}
		json_data = json.dumps(data)
		content = str.encode(json_data)
		url = "https://www.googleapis.com/oauth2/v1/certs"
		m.get(url, content=content)

		kid = "e847d9948e8545948fa8157b73e915c567302d4e"

		result = get_certificate(kid)
		expected_result = "-----BEGIN CERTIFICATE-----\nMIIDJzCCAg+gAwIBAgIJAOiiP+CnwEYwMA0GCSqGSIb3DQEBBQUAMDYxNDAyBgNV\nBAMMK2ZlZGVyYXRlZC1zaWdub24uc3lzdGVtLmdzZXJ2aWNlYWNjb3VudC5jb20w\nHhcNMjIwODI3MTUyMjA5WhcNMjIwOTEzMDMzNzA5WjA2MTQwMgYDVQQDDCtmZWRl\ncmF0ZWQtc2lnbm9uLnN5c3RlbS5nc2VydmljZWFjY291bnQuY29tMIIBIjANBgkq\nhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA21mw5OBuQDYONRNRyek+5Mwe2anpgn+1\nNy/RGKU9eNO6/wWg+emzTpwKt4c7dDXgfyJEJ63L0zD/CS+FSyzksHKoGGySsDVX\n+6nD6n36MGxVCz5Z60wgM5FaSKpf7G3iOJi0IiutLcoYv5jl72g6k6nqrRTe5BSm\n7JfNedjpRzOeBm3IPQChW9OSW/fufV8q7Ty09ZbS0fU6KRnsMyCi80EYYg0ondJD\nd56iVUKR4f/OivS+EAZSUzjcu4uWYDzc9lOw8sCbb9oJE4HWLE1bgbQ05jxIqzD+\n6oztB1Mi+0fT5A8BV26MXnSLVPiTCgbSmQSiTq+I//uqxAfsg2v6OQIDAQABozgw\nNjAMBgNVHRMBAf8EAjAAMA4GA1UdDwEB/wQEAwIHgDAWBgNVHSUBAf8EDDAKBggr\nBgEFBQcDAjANBgkqhkiG9w0BAQUFAAOCAQEAg5PdBsjaj2+wcY5gKEFk8taZhXei\nR+hz1V+CWHMoj2U2uH824qr+DqtGrLviuTaY4zh6slaMc/H76swOwUhUIu0zG7n1\nFUl7A82zvX1LJYLRhzPQiegV8NusBJGDo6s10Pc238aX7/d5yovjzV9cAH3VUY2U\nWqBiy8c+0m7W3h+6eKkKLzoqnN3qGZxS9ahyNxJs6s30Ps3O7agWtFoV+9F9/fx+\nK6yoRcSu+gk1NxdlBs+OljuSQW07eW7gpDt7KnfmmAxqNZwqgwTJM7Mv80gbvAaP\ngQIWsCIrFhfAG8JD82gbqjoS+sGkfsSYDlaXule/bz+SPOnm2baB8CfMkA==\n-----END CERTIFICATE-----\n"

		self.assertEqual(result, expected_result)


class GetCertificate2(TestCase):

	@requests_mock.Mocker()
	def test(self, m):

		data = {
			"e847d9948e8545948fa8157b73e915c567302d4e": "-----BEGIN CERTIFICATE-----\nMIIDJzCCAg+gAwIBAgIJAOiiP+CnwEYwMA0GCSqGSIb3DQEBBQUAMDYxNDAyBgNV\nBAMMK2ZlZGVyYXRlZC1zaWdub24uc3lzdGVtLmdzZXJ2aWNlYWNjb3VudC5jb20w\nHhcNMjIwODI3MTUyMjA5WhcNMjIwOTEzMDMzNzA5WjA2MTQwMgYDVQQDDCtmZWRl\ncmF0ZWQtc2lnbm9uLnN5c3RlbS5nc2VydmljZWFjY291bnQuY29tMIIBIjANBgkq\nhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA21mw5OBuQDYONRNRyek+5Mwe2anpgn+1\nNy/RGKU9eNO6/wWg+emzTpwKt4c7dDXgfyJEJ63L0zD/CS+FSyzksHKoGGySsDVX\n+6nD6n36MGxVCz5Z60wgM5FaSKpf7G3iOJi0IiutLcoYv5jl72g6k6nqrRTe5BSm\n7JfNedjpRzOeBm3IPQChW9OSW/fufV8q7Ty09ZbS0fU6KRnsMyCi80EYYg0ondJD\nd56iVUKR4f/OivS+EAZSUzjcu4uWYDzc9lOw8sCbb9oJE4HWLE1bgbQ05jxIqzD+\n6oztB1Mi+0fT5A8BV26MXnSLVPiTCgbSmQSiTq+I//uqxAfsg2v6OQIDAQABozgw\nNjAMBgNVHRMBAf8EAjAAMA4GA1UdDwEB/wQEAwIHgDAWBgNVHSUBAf8EDDAKBggr\nBgEFBQcDAjANBgkqhkiG9w0BAQUFAAOCAQEAg5PdBsjaj2+wcY5gKEFk8taZhXei\nR+hz1V+CWHMoj2U2uH824qr+DqtGrLviuTaY4zh6slaMc/H76swOwUhUIu0zG7n1\nFUl7A82zvX1LJYLRhzPQiegV8NusBJGDo6s10Pc238aX7/d5yovjzV9cAH3VUY2U\nWqBiy8c+0m7W3h+6eKkKLzoqnN3qGZxS9ahyNxJs6s30Ps3O7agWtFoV+9F9/fx+\nK6yoRcSu+gk1NxdlBs+OljuSQW07eW7gpDt7KnfmmAxqNZwqgwTJM7Mv80gbvAaP\ngQIWsCIrFhfAG8JD82gbqjoS+sGkfsSYDlaXule/bz+SPOnm2baB8CfMkA==\n-----END CERTIFICATE-----\n",
			"402f305b70581329ff289b5b3a67283806eca893": "-----BEGIN CERTIFICATE-----\nMIIDJzCCAg+gAwIBAgIJAP8DnpyTyzWzMA0GCSqGSIb3DQEBBQUAMDYxNDAyBgNV\nBAMMK2ZlZGVyYXRlZC1zaWdub24uc3lzdGVtLmdzZXJ2aWNlYWNjb3VudC5jb20w\nHhcNMjIwODE5MTUyMjA4WhcNMjIwOTA1MDMzNzA4WjA2MTQwMgYDVQQDDCtmZWRl\ncmF0ZWQtc2lnbm9uLnN5c3RlbS5nc2VydmljZWFjY291bnQuY29tMIIBIjANBgkq\nhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAjN4xvvGtTeXxq5DZxQxBdafPZAfXn6uo\nwE1VsVXRaSo28GAizL0OdErMui028K3pLN1XkThebJruh7SSadG3H7WJfpxf4wyC\ngj1ofbRIhbjjKcPqO86Lo/Uekzsv5MeW4Q2ZOvZiJkLnp3zFnFKaeBV0P408k2Hb\nGnHS6LEcDqDWA7G+TmE+TZIoB6HZ0Q7dN3oFYJ831NZj3IyNRC9lzNaG+S00AEvK\nNO+3J59qig09Z/M9yuHlU1WI+BNO8wyx+5kZFe/px6m7QQ95y9v9EZWeIKMCQkom\nkXYhLOa7GQT9ITh5uINeRqh4rIzY1z5uAHDkgIqHn1Ztpw1O47jOewIDAQABozgw\nNjAMBgNVHRMBAf8EAjAAMA4GA1UdDwEB/wQEAwIHgDAWBgNVHSUBAf8EDDAKBggr\nBgEFBQcDAjANBgkqhkiG9w0BAQUFAAOCAQEAVMtPJ/ROml4hMswWw/y2/Dwz866Z\nGuSEQnL3MY7t7xjoFtQfqf7lKFYHNQU6lLlCdqUPiSGgBpyf1IqlwOQirToVTcda\nzzrORmDMCjzes8ZBkIpCgfpMIy/HjWvGUid98CpLp0pj5mrrMc9rpl4fj9UAU9rD\niiEgORtLuGIcKYxRGZUjvfnJqnpNDViFfXOnERI97E1Eapa6KwDAu+S4WnLfjXLJ\nnyX99EMPbBm/LcS5FxHreUarbkEMaejO6HIQ6ujq80FICV8WURKlGJ/g3L4lOd1s\nnHiJllZcma99IEJyKA9+NqfVKlCs/sQX2IdC1SXPHVTPPrqPZR1OS9Bz9w==\n-----END CERTIFICATE-----\n"
		}
		json_data = json.dumps(data)
		content = str.encode(json_data)
		url = "https://www.googleapis.com/oauth2/v1/certs"
		m.get(url, content=content)

		kid = "invalid"

		result = get_certificate(kid)
		expected_result = ""

		self.assertEqual(result, expected_result)

